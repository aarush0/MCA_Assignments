# -*- coding: utf-8 -*-
"""retrieval.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n3IjWX5F2_IFVpvQ6GlAnDp-iwpPr3mS
"""

import numpy as np
from operator import itemgetter
import os
from google.colab.patches import cv2_imshow
import cv2
from numpy import linalg as LA
import datetime

L2_norms = load_norms()

def load_norms():
  return np.load('/content/drive/My Drive/HW-1/L2_cors_alt1.pkl',allow_pickle='TRUE').item()

def distance_L1(c1, c2):
  return np.sum(np.absolute(c1-c2))

def distance_L2(c1, c2):
  d = c1-c2
  return np.sum(np.multiply(d, d))

def distance_relative(c1, c2):
  sub = np.absolute(c1-c2)
  sum1 = 1 + c1 + c2
  return np.sum(np.divide(sub, sum1))

def distance_inner(c1, c2, c1n, c2n):
  pro = np.multiply(c1, c2)
  pro /= (L2_norms[c1n] * L2_norms[c2n])
  return np.sum(pro)

def load_cors():
  cors = dict()
  corellograms = os.listdir('/content/drive/My Drive/HW-1/c_alt/')
  for n, cor in enumerate(corellograms):
    print(n, end=" ")
    cor_cur = []
    cor_nm = '/content/drive/My Drive/HW-1/c_alt/' + cor
    with open(cor_nm, 'rb') as file:
      cor_cur = np.load(file)
    cors[cor] = cor_cur
  return cors

#cors = load_cors()
#outfile = open('/content/drive/My Drive/HW-1/dict_cors_alt.pkl', 'wb')
#np.save(outfile, cors)

cors = np.load('/content/drive/My Drive/HW-1/dict_cors.pkl',allow_pickle='TRUE').item()
print(cors)

def match_corellograms(target_img):
  cor_target = cors[target_img + '.pkl']
  
  distances1 = []
  distances2 = []
  distances3 = []
  corellograms = os.listdir('/content/drive/My Drive/HW-1/cors_8c/')
  
  for n, cor in enumerate(corellograms):
    if target_img+'.pkl' == cor:
      continue

    cor_cur = cors[cor]

    #d1 = distance_L2(cor_cur, cor_target)
    d2 = distance_relative(cor_target, cor_cur)
    #d3 = distance_inner(cor_target, cor_cur, cor, target_img+'.pkl')

    #distances1.append((d1, cor))
    distances2.append((d2, cor))
    #distances3.append((d3, cor))

  #distances1 = sorted(distances1, key=itemgetter(0))
  distances2 = sorted(distances2, key=itemgetter(0))
  #distances3 = sorted(distances3, key=itemgetter(0))

  return distances2

def result(good, junk, ok, dist):
  gc = jc = oc = 0
  for ind, (d, f) in enumerate(dist):

    if f[:f.find('.')] in good:
      gc += 1
    
    if f[:f.find('.')] in junk:
      jc += 1
    
    if f[:f.find('.')] in ok:
      oc += 1

    if ind >= 100:
      break

  p = (gc + oc + jc)/100
  r = (gc+oc+jc)/(len(good)+len(junk)+len(ok))
  try:
    f1 = (2*p*r)/(p+r)
  except:
    f1 = 0

  print(p, r, f1, gc, oc, jc, end =" ")

  return (p, r, f1)

def parse_groundtruth(q):
  i = q.rfind('_')

  gf = '/content/drive/My Drive/HW-1/train/ground_truth/' + q[:i]+'_good.txt'
  jf = '/content/drive/My Drive/HW-1/train/ground_truth/' + q[:i]+'_junk.txt'
  of = '/content/drive/My Drive/HW-1/train/ground_truth/' + q[:i]+'_ok.txt'

  goodfiles = []
  junkfiles = []
  okfiles = []
  

  f = open(gf, "r")
  for x in f:
    goodfiles.append(x[:-1])

  f = open(jf, "r")
  for x in f:
    junkfiles.append(x[:-1])

  f = open(of, "r")
  for x in f:
    okfiles.append(x[:-1])

  return (goodfiles, junkfiles, okfiles)

queries = os.listdir("/content/drive/My Drive/HW-1/train/query/") 


pr = 0
rc = 0
f1 = 0
for q in queries:
  a = datetime.datetime.now()

  nm_query = "/content/drive/My Drive/HW-1/train/query/" + q
  f = open(nm_query, "r")
  print(q)
  target_img = ""
  for x in f:
    target_img = x[x.find('_')+1: x.find(' ')]

  (good, junk, ok) = parse_groundtruth(q)
  
  dist = match_corellograms(target_img)
  
  (pt, rt, ft )= result(good, junk, ok, dist)

  pr += pt
  rc += rt
  f1 += ft
  
  b = datetime.datetime.now()

  print(str(b-a))  

pr /= 33
rc /= 33
f1 /= 33
print(pr, rc, f1)

def save_L2_norms():
  corellograms = os.listdir('/content/drive/My Drive/HW-1/c_alt/')
  L2_norms = dict()

  for n, cor in enumerate(corellograms):
    print(n, end=" ")
    cor_cur = []
    cor_nm = '/content/drive/My Drive/HW-1/c_alt/' + cor
    with open(cor_nm, 'rb') as file:
      cor_cur = np.load(file)
    
    norm = LA.norm(cor_cur, ord='fro')

    L2_norms[cor] = norm

  nm_out = '/content/drive/My Drive/HW-1/L2_cors_alt1.pkl'
  outfile = open(nm_out, 'wb')
  np.save(outfile, L2_norms)

save_L2_norms()